/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CoursePlannerPanel.java
 *
 * Created on Apr 21, 2011, 4:08:43 PM
 */

package KnightRMS;

import java.awt.Frame;
import java.util.Set;

/**
 *
 * @author Evan
 */
public class CoursePlannerPanel extends javax.swing.JPanel {

    private KnightEDU.DBMS.SQL.DB db;
    private Frame parent;
    
    public CoursePlannerPanel(Frame parent, KnightEDU.DBMS.SQL.DB db)
    {
        this();
        this.db = db;
        this.parent = parent;
    }

    /** Creates new form CoursePlannerPanel */
    private CoursePlannerPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        coursePlannerLeftPan = new javax.swing.JPanel();
        courseInfoTopPan = new javax.swing.JPanel();
        courseInfoInputPan = new javax.swing.JPanel();
        courseIDInsidePan = new javax.swing.JPanel();
        coursePrefixLab = new javax.swing.JLabel();
        prefixField = new javax.swing.JTextField();
        courseNumLab = new javax.swing.JLabel();
        numberField = new javax.swing.JTextField();
        courseSuffixLab = new javax.swing.JLabel();
        suffixField = new javax.swing.JTextField();
        courseNamePan = new javax.swing.JPanel();
        nameField = new javax.swing.JTextField();
        courseDescriptionPan = new javax.swing.JPanel();
        descriptionField = new javax.swing.JTextField();
        creditsPan = new javax.swing.JPanel();
        creditsMinLab = new javax.swing.JLabel();
        minCreditsField = new javax.swing.JTextField();
        creditsMaxLab = new javax.swing.JLabel();
        maxCreditsField = new javax.swing.JTextField();
        gradePrefPan = new javax.swing.JPanel();
        gradePrefBox = new javax.swing.JComboBox();
        PrereqsPan = new javax.swing.JPanel();
        prereqsLab = new javax.swing.JLabel();
        prereqListScrollPane = new javax.swing.JScrollPane();
        prereqList = new javax.swing.JList();
        editPrereqsButton = new javax.swing.JButton();
        coursePlannerSeparator = new javax.swing.JSeparator();
        coursePlannerRightPan = new javax.swing.JPanel();
        semOfferedPan = new javax.swing.JPanel();
        occasionalBox = new javax.swing.JCheckBox();
        semOfferedSeparator = new javax.swing.JSeparator();
        semOfferedSemPan = new javax.swing.JPanel();
        fallLab = new javax.swing.JLabel();
        fallEvenBox = new javax.swing.JCheckBox();
        fallOddBox = new javax.swing.JCheckBox();
        springLab = new javax.swing.JLabel();
        springEvenBox = new javax.swing.JCheckBox();
        springOddBox = new javax.swing.JCheckBox();
        summerLab = new javax.swing.JLabel();
        summerEvenBox = new javax.swing.JCheckBox();
        summerOddBox = new javax.swing.JCheckBox();
        courseSearchPan = new javax.swing.JPanel();
        courseSearchResultsLab = new javax.swing.JLabel();
        courseListScrollPane = new javax.swing.JScrollPane();
        courseList = new javax.swing.JList();
        searchButton = new javax.swing.JButton();
        courseOptionsPan = new javax.swing.JPanel();
        courseOptionsInsidePan = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.X_AXIS));

        coursePlannerLeftPan.setLayout(new javax.swing.BoxLayout(coursePlannerLeftPan, javax.swing.BoxLayout.PAGE_AXIS));

        courseInfoTopPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course Information", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        courseInfoTopPan.setLayout(new javax.swing.BoxLayout(courseInfoTopPan, javax.swing.BoxLayout.LINE_AXIS));

        courseInfoInputPan.setLayout(new java.awt.GridLayout(5, 1));

        courseIDInsidePan.setBorder(javax.swing.BorderFactory.createTitledBorder("Course ID"));
        courseIDInsidePan.setAlignmentX(0.0F);
        courseIDInsidePan.setAlignmentY(0.0F);
        courseIDInsidePan.setLayout(new java.awt.GridLayout(1, 6));

        coursePrefixLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        coursePrefixLab.setText("Prefix: ");
        courseIDInsidePan.add(coursePrefixLab);

        prefixField.setText("COP");
        prefixField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefixFieldActionPerformed(evt);
            }
        });
        courseIDInsidePan.add(prefixField);

        courseNumLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        courseNumLab.setText(" Number: ");
        courseIDInsidePan.add(courseNumLab);
        courseIDInsidePan.add(numberField);

        courseSuffixLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        courseSuffixLab.setText(" Suffix: ");
        courseIDInsidePan.add(courseSuffixLab);
        courseIDInsidePan.add(suffixField);

        courseInfoInputPan.add(courseIDInsidePan);

        courseNamePan.setBorder(javax.swing.BorderFactory.createTitledBorder("Course Name"));
        courseNamePan.setLayout(new javax.swing.BoxLayout(courseNamePan, javax.swing.BoxLayout.LINE_AXIS));
        courseNamePan.add(nameField);

        courseInfoInputPan.add(courseNamePan);

        courseDescriptionPan.setBorder(javax.swing.BorderFactory.createTitledBorder("Course Description"));
        courseDescriptionPan.setLayout(new java.awt.GridLayout(1, 0));
        courseDescriptionPan.add(descriptionField);

        courseInfoInputPan.add(courseDescriptionPan);

        creditsPan.setBorder(javax.swing.BorderFactory.createTitledBorder("Credits"));
        creditsPan.setLayout(new java.awt.GridLayout(1, 0));

        creditsMinLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        creditsMinLab.setText("Min: ");
        creditsPan.add(creditsMinLab);
        creditsPan.add(minCreditsField);

        creditsMaxLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        creditsMaxLab.setText("Max: ");
        creditsPan.add(creditsMaxLab);
        creditsPan.add(maxCreditsField);

        courseInfoInputPan.add(creditsPan);

        gradePrefPan.setBorder(javax.swing.BorderFactory.createTitledBorder("Grade Preference"));
        gradePrefPan.setLayout(new java.awt.GridLayout(1, 0));

        gradePrefBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Letter", "S / U" }));
        gradePrefBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradePrefBoxActionPerformed(evt);
            }
        });
        gradePrefPan.add(gradePrefBox);

        courseInfoInputPan.add(gradePrefPan);

        courseInfoTopPan.add(courseInfoInputPan);

        coursePlannerLeftPan.add(courseInfoTopPan);

        PrereqsPan.setLayout(new java.awt.BorderLayout());

        prereqsLab.setFont(new java.awt.Font("Tahoma", 1, 11));
        prereqsLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prereqsLab.setText("Prerequisites");
        PrereqsPan.add(prereqsLab, java.awt.BorderLayout.NORTH);

        prereqList.setBackground(new java.awt.Color(204, 255, 255));
        prereqListScrollPane.setViewportView(prereqList);

        PrereqsPan.add(prereqListScrollPane, java.awt.BorderLayout.CENTER);

        editPrereqsButton.setText("Edit Prerequisites");
        editPrereqsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPrereqsButtonActionPerformed(evt);
            }
        });
        PrereqsPan.add(editPrereqsButton, java.awt.BorderLayout.SOUTH);

        coursePlannerLeftPan.add(PrereqsPan);

        add(coursePlannerLeftPan);

        coursePlannerSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);
        add(coursePlannerSeparator);

        coursePlannerRightPan.setLayout(new java.awt.BorderLayout());

        semOfferedPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Semesters Offered", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        semOfferedPan.setLayout(new javax.swing.BoxLayout(semOfferedPan, javax.swing.BoxLayout.LINE_AXIS));

        occasionalBox.setText("Occasional");
        occasionalBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        occasionalBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                occasionalBoxActionPerformed(evt);
            }
        });
        semOfferedPan.add(occasionalBox);

        semOfferedSeparator.setOrientation(javax.swing.SwingConstants.VERTICAL);
        semOfferedPan.add(semOfferedSeparator);

        semOfferedSemPan.setLayout(new java.awt.GridLayout(3, 3, 40, 20));

        fallLab.setText("     Fall:");
        semOfferedSemPan.add(fallLab);

        fallEvenBox.setText("Even");
        fallEvenBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        semOfferedSemPan.add(fallEvenBox);

        fallOddBox.setText("Odd");
        fallOddBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        fallOddBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fallOddBoxActionPerformed(evt);
            }
        });
        semOfferedSemPan.add(fallOddBox);

        springLab.setText("     Spring:");
        semOfferedSemPan.add(springLab);

        springEvenBox.setText("Even");
        springEvenBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        springEvenBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                springEvenBoxActionPerformed(evt);
            }
        });
        semOfferedSemPan.add(springEvenBox);

        springOddBox.setText("Odd");
        springOddBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        semOfferedSemPan.add(springOddBox);

        summerLab.setText("     Summer:");
        semOfferedSemPan.add(summerLab);

        summerEvenBox.setText("Even");
        summerEvenBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        semOfferedSemPan.add(summerEvenBox);

        summerOddBox.setText("Odd");
        summerOddBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        semOfferedSemPan.add(summerOddBox);

        semOfferedPan.add(semOfferedSemPan);

        coursePlannerRightPan.add(semOfferedPan, java.awt.BorderLayout.NORTH);

        courseSearchPan.setLayout(new java.awt.BorderLayout());

        courseSearchResultsLab.setFont(new java.awt.Font("Tahoma", 1, 11));
        courseSearchResultsLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        courseSearchResultsLab.setText("Course Search Results");
        courseSearchPan.add(courseSearchResultsLab, java.awt.BorderLayout.NORTH);

        courseList.setBackground(new java.awt.Color(204, 255, 255));
        courseListScrollPane.setViewportView(courseList);

        courseSearchPan.add(courseListScrollPane, java.awt.BorderLayout.CENTER);

        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });
        courseSearchPan.add(searchButton, java.awt.BorderLayout.SOUTH);

        coursePlannerRightPan.add(courseSearchPan, java.awt.BorderLayout.CENTER);

        courseOptionsPan.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Course Options", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N
        courseOptionsPan.setLayout(new java.awt.GridLayout(1, 0));

        courseOptionsInsidePan.setLayout(new java.awt.GridLayout(1, 2));

        saveButton.setText("Save Course");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        courseOptionsInsidePan.add(saveButton);

        removeButton.setText("Remove Course");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        courseOptionsInsidePan.add(removeButton);

        courseOptionsPan.add(courseOptionsInsidePan);

        coursePlannerRightPan.add(courseOptionsPan, java.awt.BorderLayout.SOUTH);

        add(coursePlannerRightPan);
    }// </editor-fold>//GEN-END:initComponents

    private void prefixFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefixFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_prefixFieldActionPerformed

    private void gradePrefBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradePrefBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_gradePrefBoxActionPerformed

    private void editPrereqsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPrereqsButtonActionPerformed
        // TODO add your handling code here:
        new PrereqEdit(parent, true).setVisible(true);
//        if (prefixField == null || numberField == null || suffixField == null) {
//            JOptionPane.showMessageDialog(KnightRMSGUI.this, "Valid Course ID required");
//            return;
//        } else {
//            new PrereqEdit(KnightRMSGUI.this, true).setVisible(true);
//        }
//             if (courseList.getSelectedValue() != null)
//            {
//                // open prerequisites window
//                Course c = (Course) courseList.getSelectedValue();
//
//            }
//            else
//                JOptionPane.showMessageDialog(KnightRMSGUI.this, "No course is selected.");
    }//GEN-LAST:event_editPrereqsButtonActionPerformed

    private void occasionalBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occasionalBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_occasionalBoxActionPerformed

    private void fallOddBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fallOddBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_fallOddBoxActionPerformed

    private void springEvenBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_springEvenBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_springEvenBoxActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
//                    // If course is in database, update course.
//            if (db.containsCourse(courseID))
//            {
//                KnightEDU.Course c = db.getCourse(courseID);
//                Credits credits = null;
//                c.setName(name);
//                c.setDescription(description);
//                if(minCreditsField == null && maxCreditsField == null)
//                    JOptionPane.showMessageDialog(KnightRMSGUI.this, "Please enter min and/or max credits.");
//                else if(minCreditsField != null && maxCreditsField != null)
//                {
//                    int min = Integer.parseInt(minCreditsField.getText());
//                    int max = Integer.parseInt(maxCreditsField.getText());
//                    credits = Credits.createCredits(min, max);
//                }
//                else if(minCreditsField == null)
//                {
//                    int cMax = Integer.parseInt(maxCreditsField.getText());
//                    credits = Credits.createCredits(cMax);
//                }
//                else
//                {
//                    int cMin = Integer.parseInt(minCreditsField.getText());
//                    credits = Credits.createCredits(cMin);
//                }
//                c.setCredits(credits);
//                c.setGradeType((Type)gradePrefBox.getSelectedItem());
//            }
//
//            // Need a pop-up window here - if the user makes a typo in the course name,
//            // we don't want it to add a new course. Popup window should say something like,
//            // "Course not found in database. Add course to database?" and then have buttons
//            // for yes or no.
//
//            // If course is not in database, add new course.
//            else
//            {
//                Credits credits = null;
//                if(minCreditsField == null && maxCreditsField == null)
//                    JOptionPane.showMessageDialog(KnightRMSGUI.this, "Please enter min and/or max credits.");
//                else if(minCreditsField != null && maxCreditsField != null)
//                {
//                    int min = Integer.parseInt(minCreditsField.getText());
//                    int max = Integer.parseInt(maxCreditsField.getText());
//                    credits = Credits.createCredits(min, max);
//                }
//                else if(minCreditsField == null){
//                    int c = Integer.parseInt(maxCreditsField.getText());
//                    credits = Credits.createCredits(c);
//                }
//                else {
//                    int c = Integer.parseInt(minCreditsField.getText());
//                    credits = Credits.createCredits(c);
//                }
//
//
//                Grade.Type type = (Type)gradePrefBox.getSelectedItem();
//                //db.addCourse(String courseID, String name, String description, Credits credits, Grade.Type gradeType);
//                db.addCourse(courseID, name, description, credits, type);
//            }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
//            if (courseList.getSelectedValue() != null)
//            {
//                db.removeCourse(courseID);
//            }
//            else
//            {
//                JOptionPane.showMessageDialog(KnightRMSGUI.this, "Please enter search criteria.");
//            }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
//
//    KnightEDU.DBMS.Query.Course courseQuery = db.queryCourse();
//
//    KnightEDU.DBMS.Query.CourseID.PNS courseIDQuery = (KnightEDU.DBMS.Query.CourseID.PNS)courseQuery.specifyCourseID();
//
//    if (hasPrefix())
//        courseIDQuery = courseIDQuery.containsPrefix(prefixField.getText());
//    if (hasNumber())
//        courseIDQuery = courseIDQuery.containsNumberEqualTo(numberField.getText());
//    if (hasSuffix())
//        courseIDQuery = courseIDQuery.containsSuffix(suffixField.getText());
//
//    courseQuery = courseIDQuery.build();
//
//    if (hasName())
//        courseQuery = courseQuery.nameContains(nameField.getText());
//
//    // more code
//
//    Set<KnightEDU.Course> results = courseQuery.invoke();
    }//GEN-LAST:event_searchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PrereqsPan;
    private javax.swing.JPanel courseDescriptionPan;
    private javax.swing.JPanel courseIDInsidePan;
    private javax.swing.JPanel courseInfoInputPan;
    private javax.swing.JPanel courseInfoTopPan;
    private javax.swing.JList courseList;
    private javax.swing.JScrollPane courseListScrollPane;
    private javax.swing.JPanel courseNamePan;
    private javax.swing.JLabel courseNumLab;
    private javax.swing.JPanel courseOptionsInsidePan;
    private javax.swing.JPanel courseOptionsPan;
    private javax.swing.JPanel coursePlannerLeftPan;
    private javax.swing.JPanel coursePlannerRightPan;
    private javax.swing.JSeparator coursePlannerSeparator;
    private javax.swing.JLabel coursePrefixLab;
    private javax.swing.JPanel courseSearchPan;
    private javax.swing.JLabel courseSearchResultsLab;
    private javax.swing.JLabel courseSuffixLab;
    private javax.swing.JLabel creditsMaxLab;
    private javax.swing.JLabel creditsMinLab;
    private javax.swing.JPanel creditsPan;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JButton editPrereqsButton;
    private javax.swing.JCheckBox fallEvenBox;
    private javax.swing.JLabel fallLab;
    private javax.swing.JCheckBox fallOddBox;
    private javax.swing.JComboBox gradePrefBox;
    private javax.swing.JPanel gradePrefPan;
    private javax.swing.JTextField maxCreditsField;
    private javax.swing.JTextField minCreditsField;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField numberField;
    private javax.swing.JCheckBox occasionalBox;
    private javax.swing.JTextField prefixField;
    private javax.swing.JList prereqList;
    private javax.swing.JScrollPane prereqListScrollPane;
    private javax.swing.JLabel prereqsLab;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JPanel semOfferedPan;
    private javax.swing.JPanel semOfferedSemPan;
    private javax.swing.JSeparator semOfferedSeparator;
    private javax.swing.JCheckBox springEvenBox;
    private javax.swing.JLabel springLab;
    private javax.swing.JCheckBox springOddBox;
    private javax.swing.JTextField suffixField;
    private javax.swing.JCheckBox summerEvenBox;
    private javax.swing.JLabel summerLab;
    private javax.swing.JCheckBox summerOddBox;
    // End of variables declaration//GEN-END:variables


        public boolean hasCompleteCourseID()
    {
        if (prefixField.getText() != null && numberField.getText() != null && suffixField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasPartialCourseID()
    {
        if (nameField.getText() != null || numberField.getText() != null || suffixField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasPrefix()
    {
        if (prefixField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasNumber()
    {
        if (numberField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasSuffix()
    {
        if (suffixField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasName()
    {
        if (nameField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasDescription()
    {
        if (descriptionField.getText() != null)
            return true;
        else
            return false;
    }
}
