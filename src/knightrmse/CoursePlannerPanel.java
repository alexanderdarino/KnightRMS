/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CoursePlannerPanel.java
 *
 * Created on Apr 21, 2011, 4:08:43 PM
 */

package knightrmse;

import java.util.Set;

/**
 *
 * @author Evan
 */
public class CoursePlannerPanel extends javax.swing.JPanel {

    private KnightEDU.DBMS.SQL.DB db;
    
    public CoursePlannerPanel(KnightEDU.DBMS.SQL.DB db)
    {
        this();
        this.db = db;
    }

    /** Creates new form CoursePlannerPanel */
    private CoursePlannerPanel() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        coursePlannerLeftPan = new javax.swing.JPanel();
        courseInfoLab = new javax.swing.JLabel();
        courseInfoTopPan = new javax.swing.JPanel();
        courseInfoLabelPan = new javax.swing.JPanel();
        courseIDLab = new javax.swing.JLabel();
        courseNameLab = new javax.swing.JLabel();
        courseDescipLab = new javax.swing.JLabel();
        creditsLab = new javax.swing.JLabel();
        gradingPrefLab = new javax.swing.JLabel();
        courseInfoInputPan = new javax.swing.JPanel();
        courseIDInsidePan = new javax.swing.JPanel();
        coursePrefixLab = new javax.swing.JLabel();
        prefixField = new javax.swing.JTextField();
        courseNumLab = new javax.swing.JLabel();
        numberField = new javax.swing.JTextField();
        courseSuffixLab = new javax.swing.JLabel();
        suffixField = new javax.swing.JTextField();
        nameField = new javax.swing.JTextField();
        descriptionField = new javax.swing.JTextField();
        courseCreditsPan = new javax.swing.JPanel();
        creditsMinLab = new javax.swing.JLabel();
        minCreditsField = new javax.swing.JTextField();
        creditsMaxLab = new javax.swing.JLabel();
        maxCreditsField = new javax.swing.JTextField();
        gradePrefBox = new javax.swing.JComboBox();
        PrereqsPan = new javax.swing.JPanel();
        prereqsLab = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        prereqList = new javax.swing.JList();
        editPrereqsButton = new javax.swing.JButton();
        coursePlannerSep = new javax.swing.JSeparator();
        coursePlannerRightPan = new javax.swing.JPanel();
        semOfferedPan = new javax.swing.JPanel();
        javax.swing.JPanel semOfferedAllBoxPan = new javax.swing.JPanel();
        occasionalBox = new javax.swing.JCheckBox();
        jSeparator7 = new javax.swing.JSeparator();
        semOfferedSemPan = new javax.swing.JPanel();
        fallLab = new javax.swing.JLabel();
        fallEvenBox = new javax.swing.JCheckBox();
        fallOddBox = new javax.swing.JCheckBox();
        springLab = new javax.swing.JLabel();
        springEvenBox = new javax.swing.JCheckBox();
        springOddBox = new javax.swing.JCheckBox();
        summerLab = new javax.swing.JLabel();
        summerEvenBox = new javax.swing.JCheckBox();
        summerOddBox = new javax.swing.JCheckBox();
        courseSearchPan = new javax.swing.JPanel();
        courseSearchResultsLab2 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        courseList1 = new javax.swing.JList();
        searchButton1 = new javax.swing.JButton();
        courseOptionsPan = new javax.swing.JPanel();
        courseOptionsLab = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        courseOptionsInsidePan = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        removeButton = new javax.swing.JButton();

        coursePlannerLeftPan.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        courseInfoLab.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        courseInfoLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        courseInfoLab.setText("Course Information");
        coursePlannerLeftPan.add(courseInfoLab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 40));

        courseInfoTopPan.setLayout(new javax.swing.BoxLayout(courseInfoTopPan, javax.swing.BoxLayout.LINE_AXIS));

        courseInfoLabelPan.setLayout(new java.awt.GridLayout(5, 1));

        courseIDLab.setFont(new java.awt.Font("Tahoma", 1, 12));
        courseIDLab.setText("Course ID:");
        courseIDLab.setIconTextGap(5);
        courseIDLab.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
        courseInfoLabelPan.add(courseIDLab);

        courseNameLab.setFont(new java.awt.Font("Tahoma", 1, 12));
        courseNameLab.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        courseNameLab.setText("Course Name:");
        courseInfoLabelPan.add(courseNameLab);

        courseDescipLab.setFont(new java.awt.Font("Tahoma", 1, 12));
        courseDescipLab.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        courseDescipLab.setText("Course Description:");
        courseInfoLabelPan.add(courseDescipLab);

        creditsLab.setFont(new java.awt.Font("Tahoma", 1, 12));
        creditsLab.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        creditsLab.setText("Credits:");
        courseInfoLabelPan.add(creditsLab);

        gradingPrefLab.setFont(new java.awt.Font("Tahoma", 1, 12));
        gradingPrefLab.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gradingPrefLab.setText("Grading Preference:");
        courseInfoLabelPan.add(gradingPrefLab);

        courseInfoTopPan.add(courseInfoLabelPan);

        courseInfoInputPan.setLayout(new java.awt.GridLayout(5, 1));

        courseIDInsidePan.setAlignmentX(0.0F);
        courseIDInsidePan.setAlignmentY(0.0F);
        courseIDInsidePan.setLayout(new java.awt.GridLayout(1, 6));

        coursePrefixLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        coursePrefixLab.setText("Prefix: ");
        courseIDInsidePan.add(coursePrefixLab);

        prefixField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                prefixFieldActionPerformed(evt);
            }
        });
        courseIDInsidePan.add(prefixField);

        courseNumLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        courseNumLab.setText(" Number: ");
        courseIDInsidePan.add(courseNumLab);
        courseIDInsidePan.add(numberField);

        courseSuffixLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        courseSuffixLab.setText(" Suffix: ");
        courseIDInsidePan.add(courseSuffixLab);
        courseIDInsidePan.add(suffixField);

        courseInfoInputPan.add(courseIDInsidePan);
        courseInfoInputPan.add(nameField);
        courseInfoInputPan.add(descriptionField);

        courseCreditsPan.setLayout(new java.awt.GridLayout());

        creditsMinLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        creditsMinLab.setText("Min: ");
        courseCreditsPan.add(creditsMinLab);
        courseCreditsPan.add(minCreditsField);

        creditsMaxLab.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        creditsMaxLab.setText("Max: ");
        courseCreditsPan.add(creditsMaxLab);
        courseCreditsPan.add(maxCreditsField);

        courseInfoInputPan.add(courseCreditsPan);

        gradePrefBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Letter", "S / U" }));
        gradePrefBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gradePrefBoxActionPerformed(evt);
            }
        });
        courseInfoInputPan.add(gradePrefBox);

        courseInfoTopPan.add(courseInfoInputPan);

        coursePlannerLeftPan.add(courseInfoTopPan, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, 100));

        PrereqsPan.setLayout(new java.awt.GridBagLayout());

        prereqsLab.setFont(new java.awt.Font("Tahoma", 1, 12));
        prereqsLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        prereqsLab.setText("Prerequisites:");
        PrereqsPan.add(prereqsLab, new java.awt.GridBagConstraints());

        prereqList.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane2.setViewportView(prereqList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.ipadx = 136;
        gridBagConstraints.ipady = 78;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(11, 0, 0, 0);
        PrereqsPan.add(jScrollPane2, gridBagConstraints);

        editPrereqsButton.setText("Edit Prerequisites");
        editPrereqsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editPrereqsButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 44;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 11, 0);
        PrereqsPan.add(editPrereqsButton, gridBagConstraints);

        coursePlannerLeftPan.add(PrereqsPan, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 290, 160, 200));

        coursePlannerSep.setOrientation(javax.swing.SwingConstants.VERTICAL);

        coursePlannerRightPan.setLayout(new javax.swing.BoxLayout(coursePlannerRightPan, javax.swing.BoxLayout.PAGE_AXIS));

        semOfferedPan.setBorder(javax.swing.BorderFactory.createTitledBorder("Semesters Offered:"));
        semOfferedPan.setLayout(new java.awt.GridBagLayout());

        semOfferedAllBoxPan.setLayout(new javax.swing.BoxLayout(semOfferedAllBoxPan, javax.swing.BoxLayout.LINE_AXIS));

        occasionalBox.setText("Occasional");
        occasionalBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        occasionalBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                occasionalBoxActionPerformed(evt);
            }
        });
        semOfferedAllBoxPan.add(occasionalBox);

        jSeparator7.setOrientation(javax.swing.SwingConstants.VERTICAL);
        semOfferedAllBoxPan.add(jSeparator7);

        semOfferedSemPan.setLayout(new java.awt.GridLayout(3, 3, 40, 20));

        fallLab.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        fallLab.setText("     Fall:");
        semOfferedSemPan.add(fallLab);

        fallEvenBox.setText("Even");
        fallEvenBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        semOfferedSemPan.add(fallEvenBox);

        fallOddBox.setText("Odd");
        fallOddBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        fallOddBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fallOddBoxActionPerformed(evt);
            }
        });
        semOfferedSemPan.add(fallOddBox);

        springLab.setFont(new java.awt.Font("Tahoma", 1, 11));
        springLab.setText("     Spring:");
        semOfferedSemPan.add(springLab);

        springEvenBox.setText("Even");
        springEvenBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        springEvenBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                springEvenBoxActionPerformed(evt);
            }
        });
        semOfferedSemPan.add(springEvenBox);

        springOddBox.setText("Odd");
        springOddBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        semOfferedSemPan.add(springOddBox);

        summerLab.setFont(new java.awt.Font("Tahoma", 1, 11));
        summerLab.setText("     Summer:");
        semOfferedSemPan.add(summerLab);

        summerEvenBox.setText("Even");
        summerEvenBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        semOfferedSemPan.add(summerEvenBox);

        summerOddBox.setText("Odd");
        summerOddBox.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        semOfferedSemPan.add(summerOddBox);

        semOfferedAllBoxPan.add(semOfferedSemPan);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(18, 0, 0, 0);
        semOfferedPan.add(semOfferedAllBoxPan, gridBagConstraints);

        coursePlannerRightPan.add(semOfferedPan);

        courseSearchPan.setLayout(new java.awt.GridBagLayout());

        courseSearchResultsLab2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        courseSearchResultsLab2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        courseSearchResultsLab2.setText("Course Search Results");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.gridheight = 2;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 0, 0);
        courseSearchPan.add(courseSearchResultsLab2, gridBagConstraints);

        courseList1.setBackground(new java.awt.Color(204, 255, 255));
        jScrollPane3.setViewportView(courseList1);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        courseSearchPan.add(jScrollPane3, gridBagConstraints);

        searchButton1.setText("Search");
        searchButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButton1ActionPerformed(evt);
            }
        });
        courseSearchPan.add(searchButton1, new java.awt.GridBagConstraints());

        coursePlannerRightPan.add(courseSearchPan);

        courseOptionsPan.setLayout(new java.awt.GridLayout(3, 1));

        courseOptionsLab.setFont(new java.awt.Font("Tahoma", 1, 12));
        courseOptionsLab.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        courseOptionsLab.setText("Course Options");
        courseOptionsPan.add(courseOptionsLab);
        courseOptionsPan.add(jLabel3);

        courseOptionsInsidePan.setLayout(new java.awt.GridLayout(1, 2));

        saveButton.setText("Save Course");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });
        courseOptionsInsidePan.add(saveButton);

        removeButton.setText("Remove Course");
        removeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeButtonActionPerformed(evt);
            }
        });
        courseOptionsInsidePan.add(removeButton);

        courseOptionsPan.add(courseOptionsInsidePan);

        coursePlannerRightPan.add(courseOptionsPan);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1278, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 216, Short.MAX_VALUE)
                    .addComponent(coursePlannerLeftPan, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coursePlannerSep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(coursePlannerRightPan, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 217, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 717, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 60, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(coursePlannerLeftPan, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(coursePlannerSep, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(coursePlannerRightPan, javax.swing.GroupLayout.PREFERRED_SIZE, 597, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGap(0, 60, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void prefixFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_prefixFieldActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_prefixFieldActionPerformed

    private void gradePrefBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gradePrefBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_gradePrefBoxActionPerformed

    private void editPrereqsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editPrereqsButtonActionPerformed
        // TODO add your handling code here:
//        if (prefixField == null || numberField == null || suffixField == null) {
//            JOptionPane.showMessageDialog(KnightRMSGUI.this, "Valid Course ID required");
//            return;
//        } else {
//            new PrereqEdit(KnightRMSGUI.this, true).setVisible(true);
//        }
//             if (courseList.getSelectedValue() != null)
//            {
//                // open prerequisites window
//                Course c = (Course) courseList.getSelectedValue();
//
//            }
//            else
//                JOptionPane.showMessageDialog(KnightRMSGUI.this, "No course is selected.");
    }//GEN-LAST:event_editPrereqsButtonActionPerformed

    private void occasionalBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_occasionalBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_occasionalBoxActionPerformed

    private void fallOddBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fallOddBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_fallOddBoxActionPerformed

    private void springEvenBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_springEvenBoxActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_springEvenBoxActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
//                    // If course is in database, update course.
//            if (db.containsCourse(courseID))
//            {
//                KnightEDU.Course c = db.getCourse(courseID);
//                Credits credits = null;
//                c.setName(name);
//                c.setDescription(description);
//                if(minCreditsField == null && maxCreditsField == null)
//                    JOptionPane.showMessageDialog(KnightRMSGUI.this, "Please enter min and/or max credits.");
//                else if(minCreditsField != null && maxCreditsField != null)
//                {
//                    int min = Integer.parseInt(minCreditsField.getText());
//                    int max = Integer.parseInt(maxCreditsField.getText());
//                    credits = Credits.createCredits(min, max);
//                }
//                else if(minCreditsField == null)
//                {
//                    int cMax = Integer.parseInt(maxCreditsField.getText());
//                    credits = Credits.createCredits(cMax);
//                }
//                else
//                {
//                    int cMin = Integer.parseInt(minCreditsField.getText());
//                    credits = Credits.createCredits(cMin);
//                }
//                c.setCredits(credits);
//                c.setGradeType((Type)gradePrefBox.getSelectedItem());
//            }
//
//            // Need a pop-up window here - if the user makes a typo in the course name,
//            // we don't want it to add a new course. Popup window should say something like,
//            // "Course not found in database. Add course to database?" and then have buttons
//            // for yes or no.
//
//            // If course is not in database, add new course.
//            else
//            {
//                Credits credits = null;
//                if(minCreditsField == null && maxCreditsField == null)
//                    JOptionPane.showMessageDialog(KnightRMSGUI.this, "Please enter min and/or max credits.");
//                else if(minCreditsField != null && maxCreditsField != null)
//                {
//                    int min = Integer.parseInt(minCreditsField.getText());
//                    int max = Integer.parseInt(maxCreditsField.getText());
//                    credits = Credits.createCredits(min, max);
//                }
//                else if(minCreditsField == null){
//                    int c = Integer.parseInt(maxCreditsField.getText());
//                    credits = Credits.createCredits(c);
//                }
//                else {
//                    int c = Integer.parseInt(minCreditsField.getText());
//                    credits = Credits.createCredits(c);
//                }
//
//
//                Grade.Type type = (Type)gradePrefBox.getSelectedItem();
//                //db.addCourse(String courseID, String name, String description, Credits credits, Grade.Type gradeType);
//                db.addCourse(courseID, name, description, credits, type);
//            }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
//            if (courseList.getSelectedValue() != null)
//            {
//                db.removeCourse(courseID);
//            }
//            else
//            {
//                JOptionPane.showMessageDialog(KnightRMSGUI.this, "Please enter search criteria.");
//            }
    }//GEN-LAST:event_removeButtonActionPerformed

    private void searchButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButton1ActionPerformed
//
//    KnightEDU.DBMS.Query.Course courseQuery = db.queryCourse();
//
//    KnightEDU.DBMS.Query.CourseID.PNS courseIDQuery = (KnightEDU.DBMS.Query.CourseID.PNS)courseQuery.specifyCourseID();
//
//    if (hasPrefix())
//        courseIDQuery = courseIDQuery.containsPrefix(prefixField.getText());
//    if (hasNumber())
//        courseIDQuery = courseIDQuery.containsNumberEqualTo(numberField.getText());
//    if (hasSuffix())
//        courseIDQuery = courseIDQuery.containsSuffix(suffixField.getText());
//
//    courseQuery = courseIDQuery.build();
//
//    if (hasName())
//        courseQuery = courseQuery.nameContains(nameField.getText());
//
//    // more code
//
//    Set<KnightEDU.Course> results = courseQuery.invoke();
    }//GEN-LAST:event_searchButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PrereqsPan;
    private javax.swing.JPanel courseCreditsPan;
    private javax.swing.JLabel courseDescipLab;
    private javax.swing.JPanel courseIDInsidePan;
    private javax.swing.JLabel courseIDLab;
    private javax.swing.JPanel courseInfoInputPan;
    private javax.swing.JLabel courseInfoLab;
    private javax.swing.JPanel courseInfoLabelPan;
    private javax.swing.JPanel courseInfoTopPan;
    private javax.swing.JList courseList1;
    private javax.swing.JLabel courseNameLab;
    private javax.swing.JLabel courseNumLab;
    private javax.swing.JPanel courseOptionsInsidePan;
    private javax.swing.JLabel courseOptionsLab;
    private javax.swing.JPanel courseOptionsPan;
    private javax.swing.JPanel coursePlannerLeftPan;
    private javax.swing.JPanel coursePlannerRightPan;
    private javax.swing.JSeparator coursePlannerSep;
    private javax.swing.JLabel coursePrefixLab;
    private javax.swing.JPanel courseSearchPan;
    private javax.swing.JLabel courseSearchResultsLab2;
    private javax.swing.JLabel courseSuffixLab;
    private javax.swing.JLabel creditsLab;
    private javax.swing.JLabel creditsMaxLab;
    private javax.swing.JLabel creditsMinLab;
    private javax.swing.JTextField descriptionField;
    private javax.swing.JButton editPrereqsButton;
    private javax.swing.JCheckBox fallEvenBox;
    private javax.swing.JLabel fallLab;
    private javax.swing.JCheckBox fallOddBox;
    private javax.swing.JComboBox gradePrefBox;
    private javax.swing.JLabel gradingPrefLab;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator7;
    private javax.swing.JTextField maxCreditsField;
    private javax.swing.JTextField minCreditsField;
    private javax.swing.JTextField nameField;
    private javax.swing.JTextField numberField;
    private javax.swing.JCheckBox occasionalBox;
    private javax.swing.JTextField prefixField;
    private javax.swing.JList prereqList;
    private javax.swing.JLabel prereqsLab;
    private javax.swing.JButton removeButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton searchButton1;
    private javax.swing.JPanel semOfferedPan;
    private javax.swing.JPanel semOfferedSemPan;
    private javax.swing.JCheckBox springEvenBox;
    private javax.swing.JLabel springLab;
    private javax.swing.JCheckBox springOddBox;
    private javax.swing.JTextField suffixField;
    private javax.swing.JCheckBox summerEvenBox;
    private javax.swing.JLabel summerLab;
    private javax.swing.JCheckBox summerOddBox;
    // End of variables declaration//GEN-END:variables


        public boolean hasCompleteCourseID()
    {
        if (prefixField.getText() != null && numberField.getText() != null && suffixField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasPartialCourseID()
    {
        if (nameField.getText() != null || numberField.getText() != null || suffixField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasPrefix()
    {
        if (prefixField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasNumber()
    {
        if (numberField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasSuffix()
    {
        if (suffixField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasName()
    {
        if (nameField.getText() != null)
            return true;
        else
            return false;
    }

    public boolean hasDescription()
    {
        if (descriptionField.getText() != null)
            return true;
        else
            return false;
    }
}
